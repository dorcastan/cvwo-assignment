import { Link, navigate } from '@reach/router';
import { ErrorMessage, Field, Form, Formik } from 'formik';
import React from 'react';

// Credit: AddTodo is adapted from
// https://dev.to/able/building-and-consuming-a-json-api-with-rails-and-react-42p6
const AddTodo = () => {
    const handleSubmit = (values) => {
        const requestTodos = async () => {
            // Get the CSRF token generated by Rails to send it
            // as a header in the request to create a new to-do,
            // so that Rails will recognize the request as valid.
            const csrfToken = document.querySelector('meta[name=csrf-token]').content;
            const response = await fetch('/api/todos', {
                method: 'POST',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/vnd.api+json',
                    'X-CSRF-Token': csrfToken
                },
                body: JSON.stringify({ data: values })
            });
            const successfulStatusCodes = [ 200, 201, 204 ];
            if (successfulStatusCodes.includes(response.status)) {
                navigate('/');
            } else {
                alert(
                    'The To-Do could not be created. \n\n'.concat(
                        `Title: ${values.attributes.title} \nBody: ${values.attributes.details}\n`
                    )
                );
            }
        };
        requestTodos();
    };

    const validateTitle = (str) => (str && str.length !== 0 ? undefined : 'Title cannot be empty');
    const validateTagName = (str) => (str && str.length !== 0 ? undefined : 'Tag cannot be empty');

    return (
        <div>
            <h2>Add a new To Do item</h2>
            <Formik
                initialValues={{
                    type: 'todos',
                    attributes: {
                        title: '',
                        details: '',
                        tag: 'General'
                    }
                }}
                onSubmit={handleSubmit}
            >
                {() => (
                    <Form>
                        <div>
                            <Field type='text' name='attributes.title' placeholder='Title' validate={validateTitle} />
                            <Field type='text' name='attributes.details' placeholder='Details' />
                            <Field type='text' name='attributes.tag' placeholder='Tag' validate={validateTagName} />
                            <button type='submit'>Add</button>
                        </div>

                        {/* TODO: organise layout and prettify */}
                        <div>
                            <ErrorMessage name='attributes.title' />
                            <ErrorMessage name='attributes.tag' />
                        </div>
                    </Form>
                )}
            </Formik>

            {/* <h2>Your current to-dos</h2>
            <ShowTodos /> */}
            <p>
                <Link to='/'>Home</Link>
            </p>
        </div>
    );
};

export default AddTodo;
