import { Button, Container, Grid, TextField, Typography } from '@material-ui/core';
import { Link as RouterLink, navigate } from '@reach/router';
import { ErrorMessage, Field, Form, Formik } from 'formik';
import React from 'react';

// Credit: AddTodo is adapted from
// https://dev.to/able/building-and-consuming-a-json-api-with-rails-and-react-42p6
const AddTodo = () => {
    const handleSubmit = (values) => {
        const requestTodos = async () => {
            // Get the CSRF token generated by Rails to send it
            // as a header in the request to create a new to-do,
            // so that Rails will recognize the request as valid.
            const csrfToken = document.querySelector('meta[name=csrf-token]').content;
            const response = await fetch('/api/todos', {
                method: 'POST',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/vnd.api+json',
                    'X-CSRF-Token': csrfToken
                },
                body: JSON.stringify({ data: values })
            });
            const successfulStatusCodes = [ 200, 201, 204 ];
            if (successfulStatusCodes.includes(response.status)) {
                navigate('/');
            } else {
                alert(
                    'The To-Do could not be created. \n\n'.concat(
                        `Title: ${values.attributes.title} \nBody: ${values.attributes.details}\n`
                    )
                );
            }
        };
        requestTodos();
    };

    const validateTitle = (str) => (str && str.length !== 0 ? undefined : 'Title cannot be empty');
    const validateTagName = (str) =>
        str && str.length !== 0
            ? str.match(/[\W_]/g) ? 'Tag name should only contain alphanumeric characters' : undefined
            : 'Tag cannot be empty';

    return (
        <Container>
            <Grid container direction='column' spacing={2}>
                <Grid item>
                    <Typography variant='h2'>New To-Do</Typography>
                </Grid>

                <Grid item>
                    <Formik
                        initialValues={{
                            type: 'todos',
                            attributes: {
                                title: '',
                                details: '',
                                tag: 'General'
                            }
                        }}
                        onSubmit={handleSubmit}
                    >
                        {() => (
                            <Form>
                                <Grid container spacing={1} direction='column'>
                                    <Grid item xs>
                                        <Field
                                            as={TextField}
                                            type='text'
                                            name='attributes.title'
                                            placeholder='Title'
                                            validate={validateTitle}
                                            margin='normal'
                                            fullWidth
                                            color='primary'
                                        />
                                    </Grid>
                                    <Grid item xs>
                                        <Field
                                            as={TextField}
                                            type='text'
                                            name='attributes.details'
                                            placeholder='Details'
                                            margin='normal'
                                            fullWidth
                                            color='primary'
                                        />
                                    </Grid>
                                    <Grid item container justify='space-between' spacing={3}>
                                        <Grid item>
                                            <Field
                                                as={TextField}
                                                type='text'
                                                name='attributes.tag'
                                                placeholder='Tag'
                                                validate={validateTagName}
                                                margin='normal'
                                                fullWidth
                                                color='primary'
                                            />
                                        </Grid>
                                        <Grid item xs={1}>
                                            <Button type='submit' variant='contained' color='primary'>
                                                Add
                                            </Button>
                                        </Grid>
                                    </Grid>
                                </Grid>

                                {/* TODO: organise layout and prettify */}
                                <div>
                                    <ErrorMessage name='attributes.title' />
                                    <ErrorMessage name='attributes.tag' />
                                </div>
                            </Form>
                        )}
                    </Formik>
                </Grid>

                {/* <h2>Your current to-dos</h2>
            <ShowTodos /> */}
                <Grid item>
                    <Button component={RouterLink} to='/' variant='outlined'>
                        Home
                    </Button>
                </Grid>
            </Grid>
        </Container>
    );
};

export default AddTodo;
