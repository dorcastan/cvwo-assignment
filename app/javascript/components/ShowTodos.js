import { navigate } from '@reach/router';
import React, { useEffect, useState } from 'react';

const ShowTodos = () => {
    const [ todos, setTodos ] = useState([]);

    function editTodo(index) {
        navigate(`/${index}`);
        // TODO: Set up page to edit to-do item
    }

    function deleteTodo(index) {
        const sendDeleteRequest = async () => {
            // Get the CSRF token generated by Rails to send it
            // as a header in the request to create a new to-do,
            // so that Rails will recognize the request as valid.
            const csrfToken = document.querySelector('meta[name=csrf-token]').content;
            const response = await fetch(`/api/todos/${index}`, {
                method: 'DELETE',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/vnd.api+json',
                    'X-CSRF-Token': csrfToken
                }
            });
            switch (response.status) {
				case 200: // OK
                // fallthrough
                case 204: // No Content (i.e. successfully deleted)
                    updateTodos();
                    break;
                // TODO: case 202: // Accepted (action has been queued)
                case 404: // Not Found
                // fallthrough
                default:
                    // TODO: display error
                    alert(`To-Do #${index} could not be deleted. Please try again later.`);
                    break;
            }
        };
        sendDeleteRequest();
    }

    const updateTodos = () => {
        const requestTodos = async () => {
            const response = await fetch('api/todos');
            const { data } = await response.json();
            setTodos(data);
        };
        requestTodos();
    };

    useEffect(updateTodos, []);

    return (
        <table>
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Body</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {todos.map((todo) => (
                    <tr key={todo.id}>
                        <td>{todo.attributes.title}</td>
                        <td>{todo.attributes.body}</td>
                        <td>
                            {/* <button onClick={() => editTodo(todo.id)}>Edit</button> */}
                            <button onClick={() => deleteTodo(todo.id)}>Delete</button>
                        </td>
                    </tr>
                ))}
            </tbody>
        </table>
    );
};

export default ShowTodos;
